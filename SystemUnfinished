import java.util.Objects;
import java.util.Scanner;
import java.util.InputMismatchException;
import java.util.ArrayList;
public class SystemOOP {
    static ArrayList<String> cart = new ArrayList<>();
    static char ShopSelector, TokenSelector, ProductInfo, Navigator;
    static Scanner ShopScan = new Scanner(System.in);
    static String register_username, register_password;
    static int ageVerify = 18;
    static int userAge;
    static int Customer_money=0;
    static int total=0;
    static int moon_Price = 18000, milky_Way = 20000, shooting_star = 30000;
    static Scanner TokensScan = new Scanner(System.in);

    static void SystemShop() {

        System.out.println("\t**************************************");
        System.out.println("\tWelcome to the Non-Fungible Token Shop");
        System.out.println("\t**************************************");
        try {
            System.out.println("\t\tPlease Verify Your Age First: ");
            userAge = ShopScan.nextInt();
            if (userAge >= ageVerify) {
                Register.RegisterMember();
            } else {
                System.out.println("\tYou're a minor you are not allowed here.");
                SystemShop();
            }
        } catch (InputMismatchException e) {
                ShopScan.next();
                SystemShop();
        }
    }
}

    class Register extends SystemOOP {
        static void RegisterMember() {
            Scanner LoginScan = new Scanner(System.in);
            System.out.println("\t**************************************");
            System.out.println("\tRegister Account");
            System.out.println("\tPlease register desired username: ");
            register_username = LoginScan.nextLine();
            System.out.println("\tPlease register desired password: ");
            register_password = LoginScan.nextLine();
            System.out.println("\t**************************************");
            Login();
        }

        static void Login() {
            Scanner LogScan = new Scanner(System.in);
            System.out.println("\tLogin");
            System.out.println("\tPlease Enter Username: ");
            String username = LogScan.nextLine();
            System.out.println("\tPlease Enter Password: ");
            String password = LogScan.nextLine();
            System.out.println("\t**************************************");
            if (Objects.equals(username, register_username) && Objects.equals(password, register_password)) {
                ShopMainMenu.Menu();
            } else {
                System.out.println("\tUsername & Password not clear please try logging in again.");
                Login();
            }
        }
    }

    class ShopMainMenu extends SystemOOP {
        static void Menu() {
            Scanner MenuScan = new Scanner(System.in);
                System.out.println("\tNon-Fungible Token Shop");
                System.out.println("\t[A]Tokens List for Sale");
                System.out.println("\t[B]My Tokens");
                System.out.println("\t[C]Cart");
                System.out.println("\t[D]My Account Info");
                System.out.println("\t[E]Logout");
                System.out.println("\t**************************************");
                    ShopSelector = MenuScan.next().charAt(0);
                    switch (ShopSelector){
                        case 'A':
                        Tokens.TokensInfo();
                        break;

                        case 'B':
                        myTokensBought.myTokensBought();
                        break;

                        case 'C':
                        Cart.CartList();
                        break;

                        case 'D':
                        Account.myInfo();
                        break;

                        case 'E':
                        SystemOOP.SystemShop();
                        break;

                        default:
                        System.out.println("Input not clear, Please try again.");
                        Menu();
                        break;
                    }
        }
    }

    class Tokens extends SystemOOP {
        static void TokensInfo() {
            System.out.println("\tCategories:");
            System.out.println("\t[A]Astrophotography");
            System.out.println("\t[B]Nature");
            System.out.println("\t[C]Animals");
            System.out.println("\t[E]Back");
            System.out.println("\t**************************************");
            TokenSelector = TokensScan.nextLine().charAt(0);
            switch (TokenSelector) {
                case 'A':
                    Astro.AstroMenu();
                    break;

                case 'B':
                    Nature.NatureMenu();
                    break;

                case 'C':
                    Animals.AnimalsMenu();
                    break;

                case 'E':
                    ShopMainMenu.Menu();
                    break;

                    default:
                    System.out.println("Input not clear, Please try again.");
                    TokensScan.nextLine();
                    TokensInfo();
                    break;
            }
        }
    }

    class myTokensBought extends SystemOOP {
        static void myTokensBought() {
            System.out.println("\tMy Tokens Owned");
        }
    }
    class Astro extends Tokens {
        static void AstroMenu() {
            System.out.println("\tAstrophotography:");
            System.out.println("\t[A]Moon");
            System.out.println("\t[B]Milky Way");
            System.out.println("\t[C]Shooting Star");
            AstroInfo();
        }
        static void AstroInfo () {
            System.out.println("\tPlease enter character.");
            ProductInfo = TokensScan.nextLine().charAt(0);
            switch (ProductInfo) {
                case 'A':
                    System.out.println("Moon: " + moon_Price);
                    System.out.println("A moon shot");
                    System.out.println("[X] Buy || [Y] Add to Cart || [M] Back");
                    Navigator = TokensScan.nextLine().charAt(0);
                    switch (Navigator) {
                        case 'X':
                            try {
                                System.out.println("Enter customer money: ");
                                Customer_money = TokensScan.nextInt();
                                total = (Customer_money - moon_Price);
                                System.out.println("Change: " + total);
                                System.out.println("Item purchased!");
                                TokensScan.nextLine();
                                ShopMainMenu.Menu();
                                } catch (InputMismatchException e) {
                                    TokensScan.nextLine();
                                    System.out.println("Entered value is not an number.");
                                    AstroInfo();
                                }
                                break;
                        case 'M':
                            System.out.println("Going back to menu.");
                            Tokens.TokensInfo();
                            break;

                        case 'Y':
                            cart.add("Moon: "+moon_Price);
                            System.out.println("Added to Cart!");
                            Tokens.TokensInfo();

                            default:
                                System.out.println("Input not clear, Please try again.");
                                AstroMenu();
                                break;
                        }

                    case 'B':
                        System.out.println("Milky Way: " + milky_Way);
                        System.out.println("Milky Way photo shot during Milky Way Season");
                        System.out.println("[X] Buy || [Y] Add to Cart || [B] Back");
                        Navigator = TokensScan.nextLine().charAt(0);
                        switch (Navigator) {
                            case 'X':
                                try {
                                    System.out.println("Enter customer money: ");
                                    Customer_money = TokensScan.nextInt();
                                    total = (Customer_money - milky_Way);
                                    System.out.println("Change: " + total);
                                    System.out.println("Item purchased!");
                                    TokensScan.nextLine();
                                    ShopMainMenu.Menu();
                                } catch (InputMismatchException e) {
                                    TokensScan.nextLine();
                                    System.out.println("Entered value is not an number.");
                                    AstroInfo();
                                }
                                break;
                            case 'M':
                                System.out.println("Going back to menu.");
                                Tokens.TokensInfo();
                                break;

                            case 'Y':
                                cart.add("Milky Way: "+milky_Way);
                                System.out.println("Added to Cart!");
                                Tokens.TokensInfo();

                            default:
                                System.out.println("Input not clear, Please try again.");
                                AstroMenu();
                        }
                        break;

                    case 'C':
                        System.out.println("Shooting Star: " + shooting_star);
                        System.out.println("A stunning view of the shooting star from a comet.");
                        System.out.println("[X] Buy || [Y] Add to Cart || [B] Back");
                        Navigator = TokensScan.nextLine().charAt(0);
                        switch (Navigator) {
                            case 'X':
                                try {
                                    System.out.println("Enter customer money: ");
                                    Customer_money = TokensScan.nextInt();
                                    total = (Customer_money - shooting_star);
                                    System.out.println("Change: " + total);
                                    System.out.println("Item purchased!");
                                    TokensScan.nextLine();
                                    ShopMainMenu.Menu();
                                } catch (InputMismatchException e) {
                                    TokensScan.nextLine();
                                    System.out.println("Entered value is not an number.");
                                    AstroInfo();
                                }
                                break;
                            case 'M':
                                System.out.println("Going back to menu.");
                                Tokens.TokensInfo();
                                break;

                            case 'Y':
                                cart.add("Shooting Star: "+shooting_star);
                                System.out.println("Added to Cart!");
                                Tokens.TokensInfo();

                            default:
                                System.out.println("Input not clear, Please try again.");
                                AstroMenu();

                        }
                        break;

                    default:
                        System.out.println("Input not clear, Please try again.");
                        AstroMenu();
                }
            }
    }

    class Nature extends Tokens{
    static void NatureMenu() {
        System.out.println("\tNature:");
        System.out.println("\t[A]Mountain");
        System.out.println("\t[B]Tree");
        System.out.println("\t[C]Rain");
        }
    }

    class Animals extends Tokens{
    static void AnimalsMenu(){
        System.out.println("\tAnimals:");
        System.out.println("\t[A]Horse");
        System.out.println("\t[B]Cat");
        System.out.println("\t[C]Lion");
        }
    }

        class Cart extends SystemOOP {
            static void CartList() {
                System.out.println("\tMy Cart");
                System.out.println("\t\t"+cart);
                ShopMainMenu.Menu();
            }
        }

        class Account extends SystemOOP {
            static void myInfo() {
                System.out.println("\tMy Account Details");
                System.out.println("\tUsername: " + register_username);
                System.out.println("\tPassword: " + register_password);
            }
        }

        class Main {
            public static void main(String[] args) {
                SystemOOP So = new SystemOOP(); //Driver Code
                SystemOOP.SystemShop();
            }
        }
